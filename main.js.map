{"version":3,"file":"main.js","mappings":"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","sources":["webpack://bomberman.js/webpack/runtime/load script","webpack://bomberman.js/webpack/bootstrap","webpack://bomberman.js/webpack/runtime/define property getters","webpack://bomberman.js/webpack/runtime/ensure chunk","webpack://bomberman.js/webpack/runtime/get javascript chunk filename","webpack://bomberman.js/webpack/runtime/global","webpack://bomberman.js/webpack/runtime/hasOwnProperty shorthand","webpack://bomberman.js/webpack/runtime/make namespace object","webpack://bomberman.js/webpack/runtime/publicPath","webpack://bomberman.js/webpack/runtime/jsonp chunk loading","webpack://bomberman.js/./src/assets/images/title_bombers.png","webpack://bomberman.js/./src/assets/images/chemin.png","webpack://bomberman.js/./src/assets/images/arena_wall.png","webpack://bomberman.js/./src/assets/images/arena_bomber_walk.png","webpack://bomberman.js/./src/assets/images/arena_bomber_death.png","webpack://bomberman.js/./src/assets/images/arena_bomb.png","webpack://bomberman.js/./src/assets/images/arena_flame.png","webpack://bomberman.js/./src/assets/images/arena_item.png","webpack://bomberman.js/./src/assets/images/winner_bomber.png","webpack://bomberman.js/./src/utils/sprite.js","webpack://bomberman.js/./src/state/actions.js","webpack://bomberman.js/./src/game/color.js","webpack://bomberman.js/./src/game/geme-status.js","webpack://bomberman.js/./src/utils/music.js","webpack://bomberman.js/./src/game/direction.js","webpack://bomberman.js/./src/game/character-status.js","webpack://bomberman.js/./src/game/character.js","webpack://bomberman.js/./src/game/flame.js","webpack://bomberman.js/./src/game/cardinal.js","webpack://bomberman.js/./src/game/blast.js","webpack://bomberman.js/./src/game/bomb.js","webpack://bomberman.js/./src/game/bonus-type.js","webpack://bomberman.js/./src/state/reducer.js","webpack://bomberman.js/./src/state/redux.js","webpack://bomberman.js/./src/menus/menu.js","webpack://bomberman.js/./src/menus/title.js","webpack://bomberman.js/./src/menus/options.js","webpack://bomberman.js/./src/game/ground.js","webpack://bomberman.js/./src/game/board.js","webpack://bomberman.js/./src/game/block.js","webpack://bomberman.js/./src/game/game.js","webpack://bomberman.js/./src/game/wall.js","webpack://bomberman.js/./src/game/bonus.js","webpack://bomberman.js/./src/utils/game-utils.js","webpack://bomberman.js/./src/index.js","webpack://bomberman.js/./src/utils/keyboard.js","webpack://bomberman.js/./src/utils/gamepad.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"bomberman.js:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbomberman_js\"] = self[\"webpackChunkbomberman_js\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export default __webpack_public_path__ + \"assets/images/title_bombers.png\";","export default __webpack_public_path__ + \"assets/images/chemin.png\";","export default __webpack_public_path__ + \"assets/images/arena_wall.png\";","export default __webpack_public_path__ + \"assets/images/arena_bomber_walk.png\";","export default __webpack_public_path__ + \"assets/images/arena_bomber_death.png\";","export default __webpack_public_path__ + \"assets/images/arena_bomb.png\";","export default __webpack_public_path__ + \"assets/images/arena_flame.png\";","export default __webpack_public_path__ + \"assets/images/arena_item.png\";","export default __webpack_public_path__ + \"assets/images/winner_bomber.png\";","import title from '../assets/images/title_bombers.png';\nimport ground from '../assets/images/chemin.png';\nimport wall from '../assets/images/arena_wall.png';\nimport walk from '../assets/images/arena_bomber_walk.png';\nimport death from '../assets/images/arena_bomber_death.png';\nimport bomb from '../assets/images/arena_bomb.png';\nimport flame from '../assets/images/arena_flame.png';\nimport item from '../assets/images/arena_item.png';\nimport winner from '../assets/images/winner_bomber.png';\n\nexport class Sprite {\n  static titleWallpaper() {\n    if (this.titleImage) {\n      return this.titleImage;\n    }\n    this.titleImage = new Image();\n    this.titleImage.src = title;\n\n    return this.titleImage;\n  }\n\n  static ground() {\n    if (this.groundImage) {\n      return this.groundImage;\n    }\n    this.groundImage = new Image();\n    this.groundImage.src = ground;\n    return this.groundImage;\n  }\n\n  static wall() {\n    if (this.wallImage) {\n      return this.wallImage;\n    }\n    this.wallImage = new Image();\n    this.wallImage.src = wall;\n    this.wallImage.width = 32;\n    this.wallImage.height = 32;\n    return this.wallImage;\n  }\n\n  static characterAlive() {\n    if (this.characterAliveImage) {\n      return this.characterAliveImage;\n    }\n    this.characterAliveImage = new Image();\n    this.characterAliveImage.src = walk;\n    this.characterAliveImage.width = 43;\n    this.characterAliveImage.height = 45;\n    return this.characterAliveImage;\n  }\n\n  static characterDead() {\n    if (this.characterDeadImage) {\n      return this.characterDeadImage;\n    }\n    this.characterDeadImage = new Image();\n    this.characterDeadImage.src = death;\n    this.characterDeadImage.width = 517 / 12;\n    this.characterDeadImage.height = 316 / 7;\n    return this.characterDeadImage;\n  }\n\n  static bomb() {\n    if (this.bombImage) {\n      return this.bombImage;\n    }\n    this.bombImage = new Image();\n    this.bombImage.src = bomb;\n    this.bombImage.width = 100 / 3;\n    this.bombImage.height = 34;\n    return this.bombImage;\n  }\n\n  static flame() {\n    if (this.flameImage) {\n      return this.flameImage;\n    }\n    this.flameImage = new Image();\n    this.flameImage.src = flame;\n    this.flameImage.width = 925 / 28;\n    this.flameImage.height = 34;\n    return this.flameImage;\n  }\n\n  static bonus() {\n    if (this.itemImage) {\n      return this.itemImage;\n    }\n    this.itemImage = new Image();\n    this.itemImage.src = item;\n    this.itemImage.width = 529 / 16;\n    this.itemImage.height = 34;\n    return this.itemImage;\n  }\n\n  static characterVictory() {\n    if (this.imageVictory) {\n      return this.imageVictory;\n    }\n    this.imageVictory = new Image();\n    this.imageVictory.width = 101 / 4;\n    this.imageVictory.height = 166 / 5;\n    this.imageVictory.src = winner;\n    return this.imageVictory;\n  }\n}\n","export const Action = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT',\n  ENTER: 'ENTER',\n  ADD_PLAYER: 'ADD_PLAYER',\n  MENU_OVERFLOW: 'MENU_OVERFLOW',\n  ESCAPE: 'ESCAPE',\n  RESET: 'RESET',\n  ADD_BLAST: 'ADD_BLAST',\n  BLAST_VANISHED: 'BLAST_VANISHED',\n  DROP_BOMB: 'DROP_BOMB',\n  BOMB_EXPLODED: 'BOMB_EXPLODED',\n  DESTROY: 'DESTROY',\n  KILL: 'KILL',\n  VICTORY: 'VICTORY',\n  INIT_GAME: 'INIT_GAME',\n  CONSUME_BONUS: 'CONSUME_BONUS',\n  GET_BONUS: 'GET_BONUS',\n  MOVE: 'MOVE',\n  BONUS_EXPLODED: 'BONUS_EXPLODED',\n\n};\n\nObject.freeze(Action);\n","export const COLOR = {\n  WHITE: 0,\n  BLACK: 1,\n  RED: 2,\n  BLUE: 3,\n  GREEN: 4,\n};\n\nObject.freeze(COLOR);\n","export const GAMESTATUS = {\n  INITIALISATION: 'INITIALISATION',\n  READY: 'READY',\n  IN_PROGRESS: 'IN_PROGRESS',\n  END: 'END',\n};\n","export class Music {\n  static menuNext() {\n    return import('../assets/songs/MENU_NEXT.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static menuPrevious() {\n    return import('../assets/songs/MENU_PREVIOUS.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static menuBeep() {\n    return import('../assets/songs/MENU_BEEP.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static bombDrop() {\n    return import('../assets/songs/BOMB_DROP.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static death() {\n    return import('../assets/songs/BOMBER_DEATH.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static explosion() {\n    return import('../assets/songs/EXPLOSION_02_2.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static bonus() {\n    return import('../assets/songs/BREAK_1.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n\n  static win() {\n    return import('../assets/songs/VICTORY.ogg').then((module) => {\n      const song = module.default;\n      const audio = new Audio(song);\n      audio.load();\n      return audio;\n    });\n  }\n}\n","export const DIRECTION = {\n  DOWN: 1,\n  LEFT: 7,\n  RIGHT: 4,\n  TOP: 10,\n};\n\nObject.freeze(DIRECTION);\n","export const CharacterStatus = {\n  ALIVE: 'ALIVE',\n  VICTORY: 'VICTORY',\n  DEAD: 'DEAD',\n};\n\nObject.freeze(CharacterStatus);\n","import { DIRECTION } from './direction';\nimport { Sprite } from '../utils/sprite';\nimport { CharacterStatus } from './character-status';\nimport { Action } from '../state/actions';\nimport { dispatch, getState, subscribe } from '../state/redux';\n\nexport class Character {\n  constructor(color, x, y, direction, gamePadIndex) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.animationState = -1;\n    this.color = color;\n    this.radius = 2;\n    this.status = CharacterStatus.ALIVE;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.animationDuration = 15;\n    this.bombMax = 1;\n    this.bombUsed = 0;\n    this.pixelsToTreat = 0;\n    this.gamePadIndex = gamePadIndex;\n    this.nextFrame = this.getNextFrame(direction);\n\n    subscribe(() => {\n      this.bonus = getState().bonus;\n    });\n  }\n\n  render(canvasContext) {\n    // eslint-disable-next-line default-case\n    switch (this.status) {\n      case CharacterStatus.ALIVE:\n        this.renderAlive(canvasContext);\n        break;\n      case CharacterStatus.DEAD:\n        this.renderDead(canvasContext);\n        break;\n      case CharacterStatus.VICTORY:\n        this.renderVictory(canvasContext);\n        break;\n    }\n  }\n\n  renderAlive(canvasContext) {\n    let frame = 1;\n    if (this.animationState >= this.animationDuration) {\n      this.animationState = -1;\n    } else if (this.animationState >= 0) {\n      frame = Math.floor(this.animationState / 8);\n      if (frame > 3) {\n        frame %= 4;\n      }\n\n      this.pixelsToTreat = 32 - (32 * (this.animationState / this.animationDuration));\n\n      if (this.pixelsToTreat < 32 / 2) {\n        this.x = this.nextFrame.x;\n        this.y = this.nextFrame.y;\n      }\n\n      if (this.direction === DIRECTION.TOP) {\n        this.offsetY = this.pixelsToTreat;\n      } else if (this.direction === DIRECTION.DOWN) {\n        this.offsetY = -this.pixelsToTreat;\n      } else if (this.direction === DIRECTION.LEFT) {\n        this.offsetX = this.pixelsToTreat;\n      } else if (this.direction === DIRECTION.RIGHT) {\n        this.offsetX = -this.pixelsToTreat;\n      }\n\n      this.animationState++;\n    }\n\n    const getNextImageFrame = () => {\n      // eslint-disable-next-line default-case\n      switch (frame) {\n        case 0:\n          return 1;\n        case 1:\n          return 0;\n        case 2:\n          return -1;\n        case 3:\n          return 0;\n      }\n\n      return 1;\n    };\n\n    let targetX;\n    let targetY;\n    if (this.animationState !== -1) {\n      targetX = this.nextFrame.x * 32 + this.offsetX;\n      targetY = this.nextFrame.y * 32 - 8 + this.offsetY;\n    } else {\n      targetX = this.x * 32 + this.offsetX;\n      targetY = this.y * 32 - 8 + this.offsetY;\n    }\n    canvasContext.ctx.drawImage(\n      Sprite.characterAlive(),\n      Sprite.characterAlive().width * (getNextImageFrame() + this.direction),\n      Sprite.characterAlive().height * this.color,\n      Sprite.characterAlive().width,\n      Sprite.characterAlive().height,\n      targetX,\n      targetY,\n      32,\n      32,\n    );\n  }\n\n  getNextFrame(direction) {\n    const coord = { x: this.x, y: this.y };\n    // eslint-disable-next-line default-case\n    switch (direction) {\n      case DIRECTION.DOWN:\n        coord.y++;\n        break;\n      case DIRECTION.LEFT:\n        coord.x--;\n        break;\n      case DIRECTION.RIGHT:\n        coord.x++;\n        break;\n      case DIRECTION.TOP:\n        coord.y--;\n        break;\n    }\n    return coord;\n  }\n\n  move(direction, state) {\n    if (this.animationState >= 0) return;\n\n    if (!direction) {\n      return;\n    }\n\n    this.direction = direction;\n\n    this.nextFrame = this.getNextFrame(direction);\n\n    if (this.nextFrame.x < 0 || this.nextFrame.y < 0\n            || this.nextFrame.x >= state.map[0].length || this.nextFrame.y >= state.map.length) {\n      return;\n    }\n\n    if (state.map[this.nextFrame.y][this.nextFrame.x] !== 2) {\n      return;\n    }\n\n    if (state.walls[this.nextFrame.x][this.nextFrame.y]\n        && !state.walls[this.nextFrame.x][this.nextFrame.y].destroyed) {\n      return;\n    }\n\n    this.bonus.forEach((bonus) => {\n      if (bonus.x === this.nextFrame.x && bonus.y === this.nextFrame.y) {\n        dispatch({\n          type: Action.GET_BONUS,\n          payload: {\n            bonus,\n            playerColor: this.color,\n          },\n        });\n      }\n    });\n\n    for (let i = 0; i < state.bombs.length; i++) {\n      const item = state.bombs[i];\n      if (item.x === this.nextFrame.x && item.y === this.nextFrame.y) {\n        return;\n      }\n    }\n\n    this.animationState = 1;\n  }\n\n  renderDead(canvasContext) {\n    if (this.status === CharacterStatus.ALIVE) {\n      this.status = CharacterStatus.DEAD;\n      this.animationState = 0;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.characterDead(),\n      Sprite.characterDead().width * Math.floor(this.animationState / 10),\n      Sprite.characterDead().height * this.color,\n      Sprite.characterDead().width,\n      Sprite.characterDead().height,\n      this.x * 32,\n      this.y * 32,\n      32,\n      32,\n    );\n\n    this.animationState++;\n  }\n\n  renderVictory(canvasContext) {\n    const frame = Math.floor(this.animationState / this.animationDuration);\n\n    let image = 1;\n    if (frame % 2 === 0) {\n      image = 0;\n    } else {\n      image = 1;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.characterVictory(),\n      Sprite.characterVictory().width * image,\n      Sprite.characterVictory().height * this.color,\n      Sprite.characterVictory().width,\n      Sprite.characterVictory().height,\n      this.x * 32,\n      this.y * 32,\n      32,\n      32,\n    );\n    this.animationState++;\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Flame {\n  constructor(x, y, power, cardinal) {\n    this.x = x;\n    this.y = y;\n    this.power = power;\n    this.cardinal = cardinal;\n  }\n\n  render(canvasContext) {\n    canvasContext.ctx.drawImage(\n      Sprite.flame(),\n      Sprite.flame().width * this.cardinal - this.power * Sprite.flame().width,\n      0,\n      Sprite.flame().width,\n      Sprite.flame().height,\n      this.x * 32,\n      this.y * 32,\n      34,\n      34,\n    );\n  }\n}\n","export const CARDINAL = {\n  MIDDLE: 27,\n  NORTH_MIDDLE: 3,\n  EAST_MIDDLE: 7,\n  SOUTH_MIDDLE: 3,\n  WEST_MIDDLE: 7,\n  NORTH_END: 11,\n  EAST_END: 23,\n  SOUTH_END: 19,\n  WEST_END: 15,\n};\n\nObject.freeze(CARDINAL);\n","import { Flame } from './flame';\nimport { CARDINAL } from './cardinal';\nimport { Action } from '../state/actions';\nimport { CharacterStatus } from './character-status';\nimport { dispatch } from '../state/redux';\n\nexport class Blast {\n  constructor(bomb, character, map, walls, bombs, characters, bonus) {\n    this.walls = walls;\n    this.map = map;\n    this.x = bomb.x;\n    this.y = bomb.y;\n    this.animationState = 0;\n    this.time = 0;\n    this.radius = character.radius;\n    this.timer = 20;\n    this.flames = [];\n    this.bombs = bombs;\n    this.characters = characters;\n    this.character = character;\n    this.canPropagate = {\n      north: true, east: true, south: true, west: true,\n    };\n    this.bonus = bonus;\n  }\n\n  render(canvasContext) {\n    let { radius } = this;\n    this.animationState++;\n\n    if (this.time++ > this.timer) {\n      const currentBlast = this;\n\n      dispatch({ type: Action.BLAST_VANISHED, payload: { payload: { blast: currentBlast } } });\n    }\n\n    const power = this.computePower();\n\n    if (this.animationState <= this.radius) {\n      radius = this.animationState;\n    }\n\n    this.flames.push(new Flame(this.x, this.y, power, CARDINAL.MIDDLE));\n\n    this.computeNorth(radius, power, this.canPropagate.north);\n    this.computeEast(radius, power, this.canPropagate.east);\n    this.computeSouth(radius, power, this.canPropagate.south);\n    this.computeWest(radius, power, this.canPropagate.west);\n\n    this.flames.forEach((flame) => {\n      flame.render(canvasContext);\n\n      this.bombs.forEach((bomb) => {\n        if (bomb.x === flame.x && bomb.y === flame.y) {\n          dispatch({\n            type: Action.ADD_BLAST,\n            payload: { bomb, character: bomb.character },\n          });\n\n          dispatch({\n            type: Action.BOMB_EXPLODED,\n            payload: { bomb },\n          });\n        }\n      });\n\n      this.bonus.forEach((item) => {\n        if (item.x === flame.x && item.y === flame.y) {\n          dispatch({\n            type: Action.BONUS_EXPLODED,\n            payload: { item },\n          });\n        }\n      });\n\n      this.characters.forEach((character) => {\n        if (character.x === flame.x && character.y === flame.y\n                    && character.status === CharacterStatus.ALIVE) {\n          dispatch({\n            type: Action.KILL,\n            payload: { character },\n          });\n        }\n      });\n    });\n  }\n\n  computeNorth(radius, power) {\n    let indexBlastNorth = 1;\n    while (indexBlastNorth < this.radius) {\n      const canPropagate = this.map[this.y - indexBlastNorth][this.x] === 2\n                && this.canPropagate.north;\n      const canVanish = this.walls[this.x][this.y - indexBlastNorth]\n                && !this.walls[this.x][this.y - indexBlastNorth].destroyed;\n\n      if (!canPropagate) {\n        break;\n      } else if (canVanish && canPropagate) {\n        this.canPropagate.north = false;\n        this.flames.push(new Flame(this.x, this.y - indexBlastNorth, power, CARDINAL.NORTH_END));\n        dispatch({\n          type: Action.DESTROY,\n          payload: { destroyedX: this.x, destroyedY: this.y - 1 },\n        });\n      } else if (!canVanish && canPropagate) {\n        if ((indexBlastNorth + 1) === this.radius) {\n          this.flames.push(new Flame(this.x, this.y - indexBlastNorth, power, CARDINAL.NORTH_END));\n        } else {\n          this.flames.push(\n            new Flame(this.x, this.y - indexBlastNorth, power, CARDINAL.NORTH_MIDDLE),\n          );\n        }\n      }\n      indexBlastNorth++;\n    }\n  }\n\n  computeEast(radius, power) {\n    let indexBlastEast = 1;\n    while (indexBlastEast < this.radius) {\n      const canPropagate = this.map[this.y][this.x + indexBlastEast] === 2\n          && this.canPropagate.east;\n      const canVanish = this.walls[this.x + indexBlastEast][this.y]\n          && !this.walls[this.x + indexBlastEast][this.y].destroyed;\n\n      if (!canPropagate) {\n        break;\n      } else if (canPropagate && canVanish) {\n        this.canPropagate.east = false;\n        this.flames.push(new Flame(this.x + indexBlastEast, this.y, power, CARDINAL.EAST_END));\n        dispatch({\n          type: Action.DESTROY,\n          payload: { destroyedX: this.x + indexBlastEast, destroyedY: this.y },\n        });\n      } else if (canPropagate && !canVanish) {\n        if ((indexBlastEast + 1) === this.radius) {\n          this.flames.push(new Flame(this.x + indexBlastEast, this.y, power, CARDINAL.EAST_END));\n        } else {\n          this.flames.push(new Flame(this.x + indexBlastEast, this.y, power, CARDINAL.EAST_MIDDLE));\n        }\n      }\n      indexBlastEast++;\n    }\n  }\n\n  computeSouth(radius, power) {\n    let indexBlastSouth = 1;\n    while (indexBlastSouth < this.radius) {\n      const canPropagate = this.map[this.y + indexBlastSouth][this.x] === 2\n          && this.canPropagate.south;\n      const canVanish = this.walls[this.x][this.y + indexBlastSouth]\n          && !this.walls[this.x][this.y + indexBlastSouth].destroyed;\n\n      if (!canPropagate) {\n        break;\n      } else if (canPropagate && canVanish) {\n        this.canPropagate.south = false;\n        this.flames.push(new Flame(this.x, this.y + indexBlastSouth, power, CARDINAL.SOUTH_END));\n\n        dispatch({\n          type: Action.DESTROY,\n          payload: { destroyedX: this.x, destroyedY: this.y + indexBlastSouth },\n        });\n      } else if (canPropagate && !canVanish) {\n        if ((indexBlastSouth + 1) === this.radius) {\n          this.flames.push(new Flame(this.x, this.y + indexBlastSouth, power, CARDINAL.SOUTH_END));\n        } else {\n          this.flames.push(\n            new Flame(this.x, this.y + indexBlastSouth, power, CARDINAL.SOUTH_MIDDLE),\n          );\n        }\n      }\n      indexBlastSouth++;\n    }\n  }\n\n  computeWest(radius, power) {\n    let indexBlastWest = 1;\n    while (indexBlastWest < this.radius) {\n      const canPropagate = this.map[this.y][this.x - indexBlastWest] === 2\n          && this.canPropagate.west;\n      const canVanish = this.walls[this.x - indexBlastWest][this.y]\n          && !this.walls[this.x - indexBlastWest][this.y].destroyed;\n\n      if (!canPropagate) {\n        break;\n      } else if (canPropagate && canVanish) {\n        this.canPropagate.west = false;\n        this.flames.push(new Flame(this.x - indexBlastWest, this.y, power, CARDINAL.WEST_END));\n\n        dispatch({\n          type: Action.DESTROY,\n          payload: { destroyedX: this.x - indexBlastWest, destroyedY: this.y },\n        });\n      } else if (canPropagate && !canVanish) {\n        if ((indexBlastWest + 1) === this.radius) {\n          this.flames.push(new Flame(this.x - indexBlastWest, this.y, power, CARDINAL.WEST_END));\n        } else {\n          this.flames.push(new Flame(this.x - indexBlastWest, this.y, power, CARDINAL.WEST_MIDDLE));\n        }\n      }\n      indexBlastWest++;\n    }\n  }\n\n  computePower() {\n    let power;\n    switch (this.radius) {\n      case 1:\n        power = 0;\n        break;\n      case 2:\n        power = 0;\n        break;\n      case 3:\n        power = 1;\n        break;\n      case 4:\n        power = 1;\n        break;\n      case 5:\n        power = 2;\n        break;\n      case 6:\n        power = 2;\n        break;\n      default:\n        power = 0;\n    }\n    return power;\n  }\n}\n","import { Sprite } from '../utils/sprite';\nimport { Action } from '../state/actions';\nimport { dispatch } from '../state/redux';\n\nexport class Bomb {\n  constructor(character) {\n    this.character = character;\n    this.x = character.x;\n    this.y = character.y;\n    this.animationState = 0;\n    this.animationDuration = 16;\n    this.timeElapsed = 0;\n    this.time = 0;\n    this.accelerator = 30;\n    this.timer = 128;\n  }\n\n  render(canvasContext) {\n    this.time++;\n\n    let frame = Math.floor(this.animationState / this.animationDuration);\n    if (frame > 2) {\n      frame %= 3;\n    }\n    this.animationState++;\n\n    if (this.timeElapsed++ > this.accelerator) {\n      if (this.animationDuration < 4) {\n        const currentBomb = this;\n        const { character } = this;\n\n        dispatch({\n          type: Action.ADD_BLAST,\n          payload: { bomb: currentBomb, character },\n        });\n\n        dispatch({\n          type: Action.BOMB_EXPLODED,\n          payload: { bomb: currentBomb },\n        });\n      }\n\n      this.animationDuration /= 2;\n      this.timeElapsed = 0;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.bomb(),\n      frame * Sprite.bomb().width,\n      0,\n      Sprite.bomb().width,\n      Sprite.bomb().height,\n      this.x * 32 + 4,\n      this.y * 32 + 6,\n      32 / 1.5,\n      32 / 1.5,\n    );\n  }\n}\n","export const BONUSTYPE = {\n  BOMB: 0,\n  POWER: 1,\n  SPEED: 3,\n};\n\nObject.freeze(BONUSTYPE);\n","import { GAMESTATUS } from '../game/geme-status';\nimport { Action } from './actions';\nimport { Music } from '../utils/music';\nimport { Menu } from '../menus/menu';\nimport { COLOR } from '../game/color';\nimport { Character } from '../game/character';\nimport { DIRECTION } from '../game/direction';\nimport { Blast } from '../game/blast';\nimport { Bomb } from '../game/bomb';\nimport { CharacterStatus } from '../game/character-status';\nimport { BONUSTYPE } from '../game/bonus-type';\n\nconst map = [\n  [12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 16],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [11, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 9],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [11, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 9],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [11, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 9],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [11, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 9],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [11, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 10, 2, 9],\n  [11, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 9],\n  [8, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 4],\n];\n\nconst initialState = {\n  gameStatus: GAMESTATUS.INITIALISATION,\n  selectedOption: 1,\n  currentScreenCode: 'TITLE',\n  map,\n  characters: [],\n  bonus: [],\n  bombs: [],\n  walls: [],\n  blasts: [],\n};\n\n// eslint-disable-next-line consistent-return\nfunction reducer(action, state = initialState) {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case Action.UP:\n      Music.menuBeep().then((song) => song.play());\n      return {\n        ...state,\n        selectedOption: state.selectedOption - 1,\n      };\n    case Action.DOWN:\n      Music.menuBeep().then((song) => song.play());\n      return {\n        ...state,\n        selectedOption: state.selectedOption + 1,\n      };\n    case Action.LEFT: {\n      Music.menuBeep().then((song) => song.play());\n      return state;\n    }\n    case Action.RIGHT: {\n      Music.menuBeep().then((song) => song.play());\n      return state;\n    }\n    case Action.ENTER:\n      const newScreen = Menu.getNewScreen(\n        state.selectedOption,\n        state.currentScreenCode,\n        state.gameStatus,\n      );\n      if (newScreen === 'TITLE' && [GAMESTATUS.INITIALISATION, GAMESTATUS.READY].includes(state.gameStatus)) {\n        Music.menuPrevious().then((song) => song.play());\n      } else {\n        Music.menuNext().then((song) => song.play());\n      }\n\n      return {\n        ...state,\n        selectedOption: 1,\n        currentScreenCode: newScreen,\n      };\n\n    case Action.ADD_PLAYER:\n      const { characters } = state;\n      let { gameStatus } = state;\n\n      if ([GAMESTATUS.INITIALISATION, GAMESTATUS.READY].includes(gameStatus)) {\n        if (!characters.find((character) => character.color === action.payload.index)) {\n          // eslint-disable-next-line default-case\n          switch (action.payload.index) {\n            case COLOR.WHITE:\n              characters.push(new Character(COLOR.WHITE, 1, 1, DIRECTION.DOWN));\n              break;\n            case COLOR.BLACK: {\n              characters.push(new Character(COLOR.BLACK, 1, 11, DIRECTION.DOWN));\n              break;\n            }\n            case COLOR.BLUE: {\n              characters.push(new Character(COLOR.BLUE, 13, 1, DIRECTION.DOWN));\n              break;\n            }\n            case COLOR.RED:\n              characters.push(new Character(COLOR.RED, 13, 11, DIRECTION.DOWN));\n              break;\n          }\n        }\n\n        if (characters.length >= 2) {\n          gameStatus = GAMESTATUS.READY;\n        }\n      }\n\n      return {\n        ...state,\n        characters,\n        gameStatus,\n      };\n    case Action.MENU_OVERFLOW: {\n      return {\n        ...state,\n        selectedOption: action.payload.selectedOption,\n      };\n    }\n    case Action.RESET: {\n      setTimeout(() => {\n        location.reload();\n      }, 100);\n      return this.state;\n    }\n    case Action.ADD_BLAST:\n      state.blasts.push(\n        new Blast(\n          action.payload.bomb,\n          action.payload.character,\n          state.map,\n          state.walls,\n          state.bombs,\n          state.characters,\n          state.bonus,\n        ),\n      );\n      return {\n        ...state,\n      };\n    case Action.BLAST_VANISHED:\n      state.blasts.splice(state.blasts.indexOf(action.payload.blast), 1);\n      return {\n        ...state,\n      };\n    case Action.DROP_BOMB:\n      if (state.gameStatus === GAMESTATUS.IN_PROGRESS) {\n        const { bombUsed } = state.characters\n          .find((character) => character.color === action.payload.color);\n        const { bombMax } = state.characters\n          .find((character) => character.color === action.payload.color);\n\n        if (bombUsed < bombMax) {\n          state.characters.find((character) => character.color === action.payload.color).bombUsed++;\n          const bomb = new Bomb(\n            state.characters\n              .find((character) => character.color === action.payload.color),\n          );\n          state.bombs.push(bomb);\n          Music.bombDrop().then((song) => song.play());\n        }\n      }\n      return {\n        ...state,\n      };\n    case Action.BOMB_EXPLODED:\n      state.characters.find((character) => character.color\n          === action.payload.bomb.character.color).bombUsed--;\n      state.bombs.splice(state.bombs.indexOf(action.payload.bomb), 1);\n      Music.explosion().then((song) => song.play());\n      return {\n        ...state,\n      };\n    case Action.DESTROY:\n      state.walls[action.payload.destroyedX][action.payload.destroyedY].destroyed = true;\n      return {\n        ...state,\n      };\n    case Action.KILL:\n      state.characters.find((character) => character.color\n          === action.payload.character.color).status = CharacterStatus.DEAD;\n      Music.death().then((song) => song.play());\n      return {\n        ...state,\n      };\n    case Action.VICTORY:\n      const player = state.characters.find((character) => character.color\n          === action.payload.character.color);\n      player.status = CharacterStatus.VICTORY;\n      Music.win().then((song) => song.play());\n      return {\n        ...state,\n        gameStatus: GAMESTATUS.END,\n      };\n    case Action.INIT_GAME:\n      return {\n        ...state,\n        gameStatus: GAMESTATUS.IN_PROGRESS,\n        currentScreenCode: action.payload.currentScreenCode,\n        walls: action.payload.walls,\n        bonus: action.payload.bonus,\n      };\n\n    case Action.GET_BONUS:\n      // eslint-disable-next-line default-case\n      switch (action.payload.bonus.type) {\n        case BONUSTYPE.POWER:\n          state.characters.find((character) => character.color\n              === action.payload.playerColor).radius++;\n          break;\n        case BONUSTYPE.BOMB:\n          state.characters.find((character) => character.color\n              === action.payload.playerColor).bombMax++;\n          break;\n        case BONUSTYPE.SPEED:\n          const thePlayer = state.characters.find((character) => character.color\n              === action.payload.playerColor);\n          if (state.characters.find((character) => character.color\n              === action.payload.playerColor) > 8) {\n            state.characters.find((character) => character.color\n                === action.payload.playerColor).animationDuration = thePlayer.animationDuration - 1;\n          }\n          break;\n      }\n      const bonuses = state.bonus.find((bonus) => bonus.x === action.payload.bonus.x\n          && bonus.y === action.payload.bonus.y);\n      state.bonus.splice(state.bonus.indexOf(bonuses), 1);\n      Music.bonus().then((song) => song.play());\n\n      return {\n        ...state,\n      };\n\n    case Action.MOVE: {\n      if (state.gameStatus === GAMESTATUS.IN_PROGRESS) {\n        state.characters.find((character) => character.color === action.payload.color)\n          .move(action.payload.direction, state);\n      }\n      return {\n        ...state,\n      };\n    }\n\n    case Action.BONUS_EXPLODED: {\n      const bonus = state.bonus.find((item) => item.x === action.payload.item.x\n          && item.y === action.payload.item.y);\n      state.bonus.splice(state.bonus.indexOf(bonus), 1);\n      return {\n        ...state,\n      };\n    }\n  }\n}\n\nexport { reducer };\n","import { reducer } from './reducer';\n\nconst listeners = [];\n\nlet state;\nconst getState = () => state;\n\nconst dispatch = (action) => {\n  state = reducer(action, state);\n  listeners.forEach((listener) => listener());\n};\n\nconst subscribe = (listener) => {\n  listeners.push(listener);\n  return () => listeners.filter((lis) => lis !== listener);\n};\n\nexport { getState, dispatch, subscribe };\n","import { Sprite } from '../utils/sprite';\nimport { Action } from '../state/actions';\nimport { COLOR } from '../game/color';\nimport { GAMESTATUS } from '../game/geme-status';\nimport { dispatch, getState, subscribe } from '../state/redux';\n\nexport class Menu {\n  constructor() {\n    this.imageTitlePosition = 800;\n    this.fontSize = 30;\n    this.selectedOption = 1;\n    this.playersDilayed = [];\n\n    subscribe(() => {\n      this.playersDilayed = getState().characters;\n    });\n  }\n\n  update(canvasContext) {\n    this.render(canvasContext);\n  }\n\n  render(canvasContext) {\n    canvasContext.ctx.fillStyle = 'rgb(52,173,98)';\n    canvasContext.ctx.fillRect(0, 400, canvasContext.screenWidth, canvasContext.screenHeight);\n    canvasContext.ctx.fillStyle = 'lightblue';\n    canvasContext.ctx.fillRect(0, 0, canvasContext.screenWidth, 400);\n\n    if (this.playersDilayed && this.playersDilayed.length === 0) {\n      canvasContext.ctx.font = '20px Bomberman';\n      canvasContext.ctx.textAlign = 'center';\n      canvasContext.ctx.textBaseline = 'top';\n      canvasContext.ctx.fillStyle = 'yellow';\n      canvasContext.ctx.fillText('connect at least 2 controllers', (canvasContext.screenWidth / 2) + 5 + 1, 21);\n      canvasContext.ctx.fillStyle = 'red';\n      canvasContext.ctx.fillText('connect at least 2 controllers', (canvasContext.screenWidth / 2) + 5, 20);\n      canvasContext.ctx.fillStyle = 'yellow';\n      canvasContext.ctx.fillText('To start the game', (canvasContext.screenWidth / 2) + 5 + 1, 41);\n      canvasContext.ctx.fillStyle = 'red';\n      canvasContext.ctx.fillText('To start the game', (canvasContext.screenWidth / 2) + 5, 40);\n    } else if (this.playersDilayed && this.playersDilayed.length === 1) {\n      canvasContext.ctx.font = '20px Bomberman';\n      canvasContext.ctx.textAlign = 'center';\n      canvasContext.ctx.textBaseline = 'top';\n      canvasContext.ctx.fillStyle = 'yellow';\n      canvasContext.ctx.fillText('Connect at least 1 more controller', (canvasContext.screenWidth / 2) + 5 + 1, 21);\n      canvasContext.ctx.fillStyle = 'red';\n      canvasContext.ctx.fillText('Connect at least 1 more controller', (canvasContext.screenWidth / 2) + 5, 20);\n      canvasContext.ctx.fillStyle = 'yellow';\n      canvasContext.ctx.fillText('To start the game', (canvasContext.screenWidth / 2) + 5 + 1, 41);\n      canvasContext.ctx.fillStyle = 'red';\n      canvasContext.ctx.fillText('To start the game', (canvasContext.screenWidth / 2) + 5, 40);\n    } else {\n      let offset = 100;\n      canvasContext.ctx.font = '25px Bomberman';\n      canvasContext.ctx.textAlign = 'center';\n      canvasContext.ctx.textBaseline = 'top';\n      canvasContext.ctx.fillStyle = 'red';\n\n      this.playersDilayed.forEach((player, index) => {\n        if (index === COLOR.WHITE) {\n          canvasContext.ctx.fillStyle = 'white';\n        }\n        if (index === COLOR.BLACK) {\n          canvasContext.ctx.fillStyle = 'black';\n        }\n        if (index === COLOR.RED) {\n          canvasContext.ctx.fillStyle = 'red';\n        }\n        if (index === COLOR.BLUE) {\n          canvasContext.ctx.fillStyle = 'blue';\n        }\n        canvasContext.ctx.fillText(`Player ${index + 1}`, 100 + offset, 20);\n        offset += 200;\n      });\n    }\n\n    if (this.imageTitlePosition > 170) {\n      this.imageTitlePosition -= 15;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.titleWallpaper(),\n      0,\n      this.imageTitlePosition + 5,\n      canvasContext.screenWidth,\n      canvasContext.screenHeight - 160,\n    );\n\n    if (this.fontSize < 90) {\n      this.fontSize++;\n    }\n\n    canvasContext.ctx.font = `${this.fontSize}px Bomberman`;\n    canvasContext.ctx.textAlign = 'center';\n    canvasContext.ctx.textBaseline = 'top';\n    canvasContext.ctx.fillStyle = 'gray';\n    canvasContext.ctx.fillText('Bomberman.js', (canvasContext.screenWidth / 2) + 5, 80 + 5);\n    canvasContext.ctx.fillStyle = 'rgb(250, 250, 250)';\n    canvasContext.ctx.fillText('Bomberman.js', (canvasContext.screenWidth / 2), 80);\n\n    canvasContext.ctx.font = '20px Bomberman';\n    canvasContext.ctx.fillStyle = 'rgb(250, 250, 250)';\n    canvasContext.ctx.textAlign = 'center';\n    canvasContext.ctx.textBaseline = 'middle';\n    canvasContext.ctx.fillText('Credit : Lingelo', (canvasContext.screenWidth / 2), this.imageTitlePosition + 440);\n  }\n\n  manageOverflowMenu(minSelectableOption, maxSelectableOption, selectedOption) {\n    this.selectedOption = selectedOption;\n    if (selectedOption > maxSelectableOption) {\n      this.selectedOption = maxSelectableOption;\n\n      dispatch({\n        type: Action.MENU_OVERFLOW,\n        payload: { selectedOption: this.selectedOption },\n      });\n    }\n    if (selectedOption < minSelectableOption) {\n      this.selectedOption = minSelectableOption;\n\n      dispatch({\n        type: Action.MENU_OVERFLOW,\n        payload: { selectedOption: this.selectedOption },\n      });\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  static getNewScreen(selectionOption, currentScreen, gameStatus) {\n    if (currentScreen === 'TITLE') {\n      if (selectionOption === 1 && gameStatus === GAMESTATUS.READY) {\n        return 'NEW_GAME';\n      } if (selectionOption === 2) {\n        return 'OPTIONS';\n      }\n    }\n    if (currentScreen === 'OPTIONS') {\n      return 'TITLE';\n    }\n  }\n}\n","import { Menu } from './menu';\nimport { GAMESTATUS } from '../game/geme-status';\nimport { getState, subscribe } from '../state/redux';\n\nexport class Title extends Menu {\n  constructor() {\n    super();\n    this.code = 'TITLE';\n    this.ready = false;\n\n    subscribe(() => {\n      this.manageOverflowMenu(1, 2, getState().selectedOption);\n      this.ready = getState().gameStatus === GAMESTATUS.READY;\n    });\n  }\n\n  render(canvasContext) {\n    super.render(canvasContext);\n    canvasContext.ctx.font = `${60}px Bomberman`;\n    canvasContext.ctx.fillStyle = this.getColorMenu('New Game');\n    canvasContext.ctx.fillText('New Game', canvasContext.screenWidth / 2, 330);\n    canvasContext.ctx.fillStyle = this.getColorMenu('Options');\n    canvasContext.ctx.fillText('Options', canvasContext.screenWidth / 2, 420);\n  }\n\n  getColorMenu(menu) {\n    if (menu === 'New Game' && this.selectedOption === 1 && this.ready) {\n      return 'yellow';\n    } if (menu === 'New Game' && this.selectedOption === 1 && !this.ready) {\n      return 'rgb(169,169,169)';\n    } if (menu === 'Options' && this.selectedOption === 2) {\n      return 'yellow';\n    }\n    return 'rgb(250, 250, 250)';\n  }\n}\n","import { Menu } from './menu';\nimport { getState, subscribe } from '../state/redux';\n\nexport class Options extends Menu {\n  constructor() {\n    super();\n    this.code = 'OPTIONS';\n\n    subscribe(() => {\n      this.manageOverflowMenu(1, 2, getState().selectedOption);\n    });\n  }\n\n  render(canvasContext) {\n    super.render(canvasContext);\n\n    canvasContext.ctx.font = `${50}px Bomberman`;\n    canvasContext.ctx.fillStyle = this.getColorMenu('Sound');\n    canvasContext.ctx.fillText(' Sound : yes', canvasContext.screenWidth / 2, 330);\n    canvasContext.ctx.fillStyle = this.getColorMenu('Retour');\n    canvasContext.ctx.fillText('Retour', canvasContext.screenWidth / 2, 420);\n  }\n\n  getColorMenu(menu) {\n    if (menu === 'Sound' && this.selectedOption === 1\n            || menu === 'Retour' && this.selectedOption === 2) {\n      return 'yellow';\n    }\n    return 'rgb(250, 250, 250)';\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Ground {\n  constructor(canvasContext) {\n    this.canvasContext = canvasContext;\n  }\n\n  render(x, y) {\n    this.canvasContext.ctx.drawImage(Sprite.ground(), 0, 0, 32, 32, 32 * y, 32 * x, 32, 32);\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Board {\n  constructor(type, canvasContext) {\n    this.type = type;\n    this.canvasContext = canvasContext;\n  }\n\n  render(x, y) {\n    // eslint-disable-next-line default-case\n    switch (this.type) {\n      case 'UP_LEFT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 96, 64, 32, 32, 32 * y, 32 * x, 32, 32);\n        break;\n      case 'UP_RIGHT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 96, 96, 32, 32, 32 * y, 0, 32, 32);\n        break;\n      case 'BOTTOM_LEFT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 96, 32, 32, 32, 0, 32 * x, 32, 32);\n        break;\n      case 'UP':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 32, 96, 32, 32, 32 * y, 0, 32, 32);\n        break;\n      case 'BOTTOM_RIGHT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 96, 0, 32, 32, 32 * y, 32 * x, 32, 32);\n        break;\n      case 'BOTTOM':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 32, 32, 32, 32, 32 * y, 32 * x, 32, 32);\n        break;\n      case 'LEFT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 64, 64, 32, 32, 32 * y, 32 * x, 32, 32);\n        break;\n      case 'RIGHT':\n        this.canvasContext.ctx.drawImage(Sprite.ground(), 0, 64, 32, 32, 32 * y, 32 * x, 32, 32);\n        break;\n    }\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Block {\n  constructor(canvasContext) {\n    this.canvasContext = canvasContext;\n  }\n\n  render(x, y) {\n    this.canvasContext.ctx.drawImage(Sprite.ground(), 32, 64, 32, 32, 32 * y, 32 * x, 32, 32);\n  }\n}\n","import { Ground } from './ground';\nimport { Board } from './board';\nimport { Block } from './block';\nimport { CharacterStatus } from './character-status';\nimport { Action } from '../state/actions';\nimport { dispatch, getState, subscribe } from '../state/redux';\n\nexport class Game {\n  constructor(map, walls, characters, bonus) {\n    this.map = map;\n    this.characters = characters;\n    this.walls = walls;\n    this.bonus = bonus;\n    this.bombs = [];\n    this.blasts = [];\n    this.code = 'NEW_GAME';\n\n    subscribe(() => {\n      this.walls = getState().walls;\n      this.characters = getState().characters;\n      this.bonus = getState().bonus;\n      this.bombs = getState().bombs;\n      this.blasts = getState().blasts;\n      this.map = getState().map;\n    });\n  }\n\n  update(canvasContext) {\n    this.render(canvasContext);\n  }\n\n  render(canvasContext) {\n    const canvas = document.getElementById('canvas');\n    canvas.width = this.map[0] && this.map[0].length * 32;\n    canvas.height = this.map.length * 32;\n\n    canvasContext.screenWidth = canvas.width;\n    canvasContext.screenHeight = canvas.height;\n\n    canvasContext.ctx.fillStyle = 'black';\n    canvasContext.ctx.fillRect(0, 0, canvasContext.screenWidth, canvasContext.screenHeight);\n\n    this.ground = new Ground(canvasContext);\n    this.frameUpLeft = new Board('UP_LEFT', canvasContext);\n    this.frameUpRight = new Board('UP_RIGHT', canvasContext);\n    this.frameUp = new Board('UP', canvasContext);\n    this.frameBottomLeft = new Board('BOTTOM_LEFT', canvasContext);\n    this.frameBottomRight = new Board('BOTTOM_RIGHT', canvasContext);\n    this.frameBottom = new Board('BOTTOM', canvasContext);\n    this.frameLeft = new Board('LEFT', canvasContext);\n    this.frameRight = new Board('RIGHT', canvasContext);\n    this.block = new Block(canvasContext);\n\n    for (let x = 0, l = this.map.length; x < l; x++) {\n      for (let y = 0, k = this.map[x].length; y < k; y++) {\n        // eslint-disable-next-line default-case\n        switch (this.map[x][y]) {\n          case 2:\n            this.ground.render(x, y);\n            break;\n          case 12:\n            this.frameUpLeft.render(x, y);\n            break;\n          case 14:\n            this.frameUp.render(x, y);\n            break;\n          case 16:\n            this.frameUpRight.render(x, y);\n            break;\n          case 8:\n            this.frameBottomLeft.render(x, y);\n            break;\n          case 4:\n            this.frameBottomRight.render(x, y);\n            break;\n          case 6:\n            this.frameBottom.render(x, y);\n            break;\n          case 11:\n            this.frameLeft.render(x, y);\n            break;\n          case 9:\n            this.frameRight.render(x, y);\n            break;\n          case 10:\n            this.block.render(x, y);\n        }\n      }\n    }\n\n    this.bonus.forEach((bonus) => {\n      bonus.render(canvasContext);\n    });\n\n    for (let i = 0, l = this.walls.length; i < l; i++) {\n      for (let j = 0, m = this.walls[i].length; j < m; j++) {\n        if (this.walls[i][j]) {\n          this.walls[i][j].render(canvasContext);\n        }\n      }\n    }\n\n    this.bombs.forEach((bomb) => {\n      bomb.render(canvasContext);\n    });\n\n    this.blasts.forEach((blast) => {\n      blast.render(canvasContext);\n    });\n\n    this.characters.forEach((character) => {\n      character.render(canvasContext);\n    });\n\n    this.computeVictory();\n  }\n\n  computeVictory() {\n    const aliveCharacters = this.characters\n      .filter((character) => character.status === CharacterStatus.ALIVE);\n    if (aliveCharacters.length === 1 && aliveCharacters[0].status !== CharacterStatus.VICTORY) {\n      dispatch({\n        type: Action.VICTORY,\n        payload: {\n          character: aliveCharacters[0],\n        },\n      });\n    }\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Wall {\n  constructor(x, y, destroyed) {\n    this.x = x;\n    this.y = y;\n    this.animationState = 0;\n    this.animationDuration = 6;\n    this.destroyed = destroyed;\n  }\n\n  render(canvasContext) {\n    let frame = 0;\n\n    if (this.destroyed) {\n      frame = Math.floor(this.animationState / this.animationDuration);\n      this.animationState++;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.wall(),\n      frame * Sprite.wall().width,\n      0,\n      Sprite.wall().width,\n      Sprite.wall().height,\n      this.x * 32,\n      this.y * 32,\n      32,\n      32,\n    );\n  }\n}\n","import { Sprite } from '../utils/sprite';\n\nexport class Bonus {\n  constructor(x, y, type) {\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.etatAnimation = 0;\n    this.dureeAnimation = 16;\n  }\n\n  render(canvasContext) {\n    let frame = Math.floor(this.etatAnimation / this.dureeAnimation);\n    if (frame > 1) {\n      frame %= 2;\n    }\n\n    canvasContext.ctx.drawImage(\n      Sprite.bonus(),\n      (frame + this.type * 2) * Sprite.bonus().width,\n      0,\n      Sprite.bonus().width,\n      Sprite.bonus().height,\n      this.x * 32 + 4,\n      this.y * 32 + 6,\n      32 / 1.5,\n      32 / 1.5,\n    );\n\n    this.etatAnimation++;\n  }\n}\n","import { Wall } from '../game/wall';\nimport { Bonus } from '../game/bonus';\nimport { BONUSTYPE } from '../game/bonus-type';\n\nexport class GameUtils {\n  static initWalls(map, characters) {\n    const walls = [];\n\n    for (let x = 0, l = map[0].length; x < l; x++) {\n      walls[x] = [];\n      for (let y = 0, z = map.length; y < z; y++) {\n        if (map[y][x] === 2) {\n          if (this.getRandomInt(11) > 1) {\n            walls[x][y] = new Wall(x, y);\n          }\n        }\n      }\n    }\n\n    characters.forEach((character) => {\n      if (walls[character.x] && walls[character.x][character.y]) {\n        walls[character.x][character.y] = null;\n      }\n      if (walls[character.x - 1] && walls[character.x - 1][character.y]) {\n        walls[character.x - 1][character.y] = null;\n      }\n      if (walls[character.x] && walls[character.x][character.y - 1]) {\n        walls[character.x][character.y - 1] = null;\n      }\n      if (walls[character.x + 1] && walls[character.x + 1][character.y]) {\n        walls[character.x + 1][character.y] = null;\n      }\n      if (walls[character.x] && walls[character.x][character.y + 1]) {\n        walls[character.x][character.y + 1] = null;\n      }\n    });\n\n    return walls;\n  }\n\n  static initBonus(map, characters) {\n    const bonus = [];\n    const excludedCoords = [];\n    characters.map((character) => ({ x: character.x, y: character.y })).forEach((coords) => {\n      excludedCoords.push(coords.x.toString() + coords.y.toString());\n      excludedCoords.push((coords.x - 1).toString() + (coords.y).toString());\n      excludedCoords.push((coords.x).toString() + (coords.y - 1).toString());\n      excludedCoords.push((coords.x + 1).toString() + (coords.y).toString());\n      excludedCoords.push((coords.x).toString() + (coords.y + 1).toString());\n    });\n\n    for (let x = 0, l = map[0].length; x < l; x++) {\n      for (let y = 0, z = map.length; y < z; y++) {\n        if (map[y][x] === 2) {\n          const randomInt = this.getRandomInt(20);\n          if (excludedCoords.includes(x.toString() + y.toString())) {\n            continue;\n          }\n\n          // eslint-disable-next-line default-case\n          switch (randomInt) {\n            case 1:\n              bonus.push(new Bonus(x, y, BONUSTYPE.BOMB));\n              break;\n            case 10:\n              bonus.push(new Bonus(x, y, BONUSTYPE.POWER));\n              break;\n          }\n        }\n      }\n    }\n\n    return bonus;\n  }\n\n  static getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n}\n","import { Title } from './menus/title';\nimport { Keyboard } from './utils/keyboard';\nimport { Options } from './menus/options';\nimport { Game } from './game/game';\nimport { Action } from './state/actions';\nimport { GAMESTATUS } from './game/geme-status';\nimport { GamePad } from './utils/gamepad';\nimport { GameUtils } from './utils/game-utils';\nimport { dispatch, getState, subscribe } from './state/redux';\n\nconst screenWidth = 960;\nconst screenHeight = 640;\n\nconst canvas = document.getElementById('canvas');\ncanvas.width = screenWidth;\ncanvas.height = screenHeight;\nconst ctx = canvas.getContext('2d');\n\nconst canvasContext = {\n  screenWidth,\n  screenHeight,\n  ctx,\n};\n\nconst controller = new Keyboard();\ncontroller.bind();\nconst gamepads = new GamePad();\n\nlet currentScreen = new Title();\n\nsubscribe(() => {\n  if (currentScreen.code !== getState().currentScreenCode) {\n    // eslint-disable-next-line default-case\n    switch (getState().currentScreenCode) {\n      case 'TITLE':\n        currentScreen = new Title();\n        break;\n      case 'OPTIONS':\n        currentScreen = new Options();\n        break;\n      case 'NEW_GAME': {\n        const walls = GameUtils.initWalls(getState().map, getState().characters);\n        const bonus = GameUtils.initBonus(getState().map, getState().characters);\n\n        dispatch({\n          type: Action.INIT_GAME,\n          payload: {\n            status: GAMESTATUS.IN_PROGRESS,\n            walls,\n            bonus,\n\n          },\n        });\n\n        currentScreen = new Game(getState().map, walls, getState().characters, bonus);\n      }\n    }\n  }\n});\n\nconst step = () => {\n  currentScreen.update(canvasContext);\n  gamepads.listen();\n  requestAnimationFrame(step);\n};\n\nrequestAnimationFrame(step);\n\nconst metrics = {\n  width: 0,\n  height: 0,\n  computedWidth() { // computed width\n    return metrics.width;\n  },\n  computedHeight() { // computed height\n    return metrics.height;\n  },\n};\n\nconst stretch = () => {\n  metrics.width = document.body.offsetWidth;\n  metrics.height = document.body.offsetHeight;\n  canvas.style.width = `${metrics.computedWidth()}px`;\n  canvas.style.height = `${metrics.computedHeight()}px`;\n};\n\nstretch();\nwindow.addEventListener('resize', stretch, false);\n","import { Action } from '../state/actions';\nimport { dispatch } from '../state/redux';\n\nexport class Keyboard {\n  constructor() {\n    this.keys = {\n      up: 38,\n      down: 40,\n      left: 37,\n      right: 39,\n      space: 32,\n      enter: 13,\n      escape: 27,\n    };\n\n    this.handledKeys = [];\n    this.handledKeys[this.keys.up] = false;\n    this.handledKeys[this.keys.down] = false;\n    this.handledKeys[this.keys.left] = false;\n    this.handledKeys[this.keys.right] = false;\n    this.handledKeys[this.keys.space] = false;\n    this.handledKeys[this.keys.enter] = false;\n    this.handledKeys[this.keys.escape] = false;\n  }\n\n  bind() {\n    const that = this;\n    addEventListener('keyup', (e) => {\n      delete that.handledKeys[e.keyCode];\n    }, false);\n\n    addEventListener('keydown', (e) => {\n      if (that.handledKeys[e.keyCode]) {\n        that.handledKeys[e.keyCode] = true;\n      }\n\n      // eslint-disable-next-line default-case\n      switch (e.keyCode) {\n        case that.keys.up:\n          dispatch({\n            type: Action.UP,\n          });\n\n          break;\n        case that.keys.down:\n          dispatch({\n            type: Action.DOWN,\n          });\n\n          break;\n        case that.keys.enter:\n          dispatch({\n            type: Action.ENTER,\n          });\n          break;\n        case that.keys.escape:\n          dispatch({\n            type: Action.RESET,\n          });\n          break;\n        case that.keys.left:\n          dispatch({\n            type: Action.LEFT,\n          });\n          break;\n        case that.keys.right:\n          dispatch({\n            type: Action.RIGHT,\n          });\n          break;\n      }\n    }, false);\n  }\n}\n","import { Action } from '../state/actions';\nimport { DIRECTION } from '../game/direction';\nimport { dispatch } from '../state/redux';\n\n/**\n * Game PAD management :\n * X : 0\n * LEFT : 14\n * DOWN :  13\n * RIGHT : 15\n * TOP:  12\n */\nexport class GamePad {\n  constructor() {\n    this.toucheds = [false, false, false, false];\n    window.addEventListener('gamepadconnected', (e) => {\n      dispatch({\n        type: Action.ADD_PLAYER,\n        payload: {\n          index: e.gamepad.index,\n        },\n      });\n    }, false);\n\n    window.addEventListener('gamepaddisconnected', () => {\n    }, false);\n  }\n\n  listen() {\n    [navigator.getGamepads()[0],\n      navigator.getGamepads()[1],\n      navigator.getGamepads()[2],\n      navigator.getGamepads()[3],\n    ].filter((gamepad) => !!gamepad)\n      .forEach((gamepad, index) => {\n        // X\n        if (gamepad.buttons[0].pressed && !this.toucheds[index]) {\n          this.toucheds[index] = true;\n          dispatch({\n            type: Action.DROP_BOMB,\n            payload: {\n              color: index,\n            },\n          });\n        } else if (!gamepad.buttons[0].pressed && this.toucheds[index]) {\n          this.toucheds[index] = false;\n        }\n\n        // LEFT\n        if (gamepad.buttons[14].pressed) {\n          dispatch({\n            type: Action.MOVE,\n            payload: {\n              color: index,\n              direction: DIRECTION.LEFT,\n            },\n          });\n        }\n\n        // DOWN\n        if (gamepad.buttons[13].pressed) {\n          dispatch({\n            type: Action.MOVE,\n            payload: {\n              color: index,\n              direction: DIRECTION.DOWN,\n            },\n          });\n        }\n\n        // RIGHT\n        if (gamepad.buttons[15].pressed) {\n          dispatch({\n            type: Action.MOVE,\n            payload: {\n              color: index,\n              direction: DIRECTION.RIGHT,\n            },\n          });\n        }\n\n        // UP\n        if (gamepad.buttons[12].pressed) {\n          dispatch({\n            type: Action.MOVE,\n            payload: {\n              color: index,\n              direction: DIRECTION.TOP,\n            },\n          });\n        }\n      });\n  }\n}\n"],"names":["inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","Error","replace","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","self","Sprite","titleWallpaper","titleImage","Image","ground","groundImage","wall","wallImage","width","height","characterAlive","characterAliveImage","characterDead","characterDeadImage","bomb","bombImage","flame","flameImage","bonus","itemImage","characterVictory","imageVictory","Action","UP","DOWN","LEFT","RIGHT","ENTER","ADD_PLAYER","MENU_OVERFLOW","ESCAPE","RESET","ADD_BLAST","BLAST_VANISHED","DROP_BOMB","BOMB_EXPLODED","DESTROY","KILL","VICTORY","INIT_GAME","CONSUME_BONUS","GET_BONUS","MOVE","BONUS_EXPLODED","freeze","COLOR","WHITE","BLACK","RED","BLUE","GREEN","GAMESTATUS","INITIALISATION","READY","IN_PROGRESS","END","Music","menuNext","then","song","default","audio","Audio","load","menuPrevious","menuBeep","bombDrop","death","explosion","win","DIRECTION","TOP","CharacterStatus","ALIVE","DEAD","Character","constructor","color","x","y","direction","gamePadIndex","animationState","radius","status","offsetX","offsetY","animationDuration","bombMax","bombUsed","pixelsToTreat","nextFrame","getNextFrame","subscribe","getState","render","canvasContext","renderAlive","renderDead","renderVictory","targetX","targetY","frame","Math","floor","ctx","drawImage","getNextImageFrame","coord","move","state","map","walls","destroyed","dispatch","payload","playerColor","bombs","item","image","Flame","power","cardinal","CARDINAL","MIDDLE","NORTH_MIDDLE","EAST_MIDDLE","SOUTH_MIDDLE","WEST_MIDDLE","NORTH_END","EAST_END","SOUTH_END","WEST_END","Blast","character","characters","time","timer","flames","canPropagate","north","east","south","west","blast","computePower","computeNorth","computeEast","computeSouth","computeWest","indexBlastNorth","canVanish","destroyedX","destroyedY","indexBlastEast","indexBlastSouth","indexBlastWest","Bomb","timeElapsed","accelerator","currentBomb","BONUSTYPE","BOMB","POWER","SPEED","initialState","gameStatus","selectedOption","currentScreenCode","blasts","listeners","action","play","newScreen","Menu","getNewScreen","includes","find","index","reload","splice","indexOf","thePlayer","bonuses","reducer","listener","filter","lis","imageTitlePosition","fontSize","playersDilayed","update","fillStyle","fillRect","screenWidth","screenHeight","font","textAlign","textBaseline","fillText","offset","player","manageOverflowMenu","minSelectableOption","maxSelectableOption","selectionOption","currentScreen","Title","super","code","ready","getColorMenu","menu","Options","Ground","Board","Block","Game","canvas","getElementById","frameUpLeft","frameUpRight","frameUp","frameBottomLeft","frameBottomRight","frameBottom","frameLeft","frameRight","block","k","computeVictory","aliveCharacters","Wall","Bonus","etatAnimation","dureeAnimation","GameUtils","initWalls","z","getRandomInt","initBonus","excludedCoords","coords","toString","randomInt","max","random","getContext","up","down","left","right","space","enter","escape","handledKeys","that","addEventListener","keyCode","gamepads","toucheds","gamepad","listen","navigator","getGamepads","buttons","pressed","step","requestAnimationFrame","metrics","computedWidth","computedHeight","stretch","body","offsetWidth","offsetHeight","style"],"sourceRoot":""}